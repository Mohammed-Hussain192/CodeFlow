<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CodeFlow - Professional SQL Compiler</title>
    <style>
        /* Reset and Base Styles */
        :root {
            --primary-color: #6c5ce7;
            --secondary-color: #fdcb6e;
            --dark-color: #2d3436;
            --light-color: #f8f9fa;
            --text-dark: #333;
            --text-light: #f0f2f5;
            --shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--light-color);
            color: var(--text-dark);
            transition: var(--transition);
            line-height: 1.6;
        }

        body.dark {
            background-color: #121212;
            color: var(--text-light);
        }

        /* Navbar */
        #navbar {
            background-color: var(--primary-color);
            color: white;
            position: sticky;
            top: 0;
            padding: 15px 0;
            z-index: 1000;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        body.dark #navbar {
            background-color: #1e1e1e;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .nav-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
        }

        .logo span {
            color: var(--secondary-color);
        }

        .nav-links {
            display: flex;
            gap: 25px;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-size: 1.1rem;
            font-weight: 500;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: var(--secondary-color);
        }

        /* Theme Toggle */
        .theme-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
            margin-left: 20px;
        }

        .theme-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary-color);
        }

        body.dark input:checked + .slider {
            background-color: var(--secondary-color);
        }

        input:checked + .slider:before {
            transform: translateX(30px);
        }

        /* Compiler Container */
        .compiler-container {
            display: flex;
            min-height: calc(100vh - 70px);
            padding: 30px 0;
        }

        .editor-section, .output-section {
            flex: 1;
            padding: 0 15px;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .section-title {
            font-size: 1.5rem;
            color: var(--primary-color);
        }

        body.dark .section-title {
            color: var(--secondary-color);
        }

        /* Editor Styling */
        .code-editor {
            width: 100%;
            height: 500px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            overflow: auto;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            line-height: 1.5;
            padding: 10px;
            resize: none;
            border: 1px solid #ccc;
        }

        body.dark .code-editor {
            background-color: #252525;
            color: white;
            border-color: #444;
        }

        /* Output Styling */
        .output-window {
            width: 100%;
            height: 500px;
            background-color: white;
            border-radius: 8px;
            box-shadow: var(--shadow);
            padding: 15px;
            overflow-y: auto;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            white-space: pre-wrap;
        }

        body.dark .output-window {
            background-color: #252525;
            color: white;
        }

        /* Console Styling */
        .console-output {
            color: inherit;
        }
        .console-error {
            color: #ff6b6b;
        }
        .console-warn {
            color: #fdcb6e;
        }
        .console-log {
            color: #55efc4;
        }

        /* Table Styling */
        .result-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
            font-size: 14px;
        }

        .result-table th, .result-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .result-table th {
            background-color: var(--primary-color);
            color: white;
        }

        body.dark .result-table th {
            background-color: var(--secondary-color);
            color: var(--dark-color);
        }

        .result-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        body.dark .result-table tr:nth-child(even) {
            background-color: #333;
        }

        /* Controls */
        .controls {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
        }

        .btn:hover {
            background-color: #5a4bd1;
            transform: translateY(-2px);
        }

        .btn-run {
            background-color: #00b894;
        }

        .btn-run:hover {
            background-color: #00a884;
        }

        .btn-clear {
            background-color: #d63031;
        }

        .btn-clear:hover {
            background-color: #c0392b;
        }

        /* Suggestions Panel */
        .suggestions-panel {
            margin-top: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: var(--shadow);
            padding: 15px;
            max-height: 200px;
            overflow-y: auto;
        }

        body.dark .suggestions-panel {
            background-color: #252525;
        }

        .suggestion-title {
            font-size: 1.1rem;
            margin-bottom: 10px;
            color: var(--primary-color);
        }

        body.dark .suggestion-title {
            color: var(--secondary-color);
        }

        .suggestion-item {
            padding: 8px 10px;
            margin-bottom: 5px;
            border-radius: 4px;
            cursor: pointer;
            transition: var(--transition);
        }

        .suggestion-item:hover {
            background-color: rgba(108, 92, 231, 0.1);
        }

        body.dark .suggestion-item:hover {
            background-color: rgba(253, 203, 110, 0.1);
        }

        /* Footer */
        footer {
            background-color: var(--dark-color);
            color: white;
            text-align: center;
            padding: 20px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .compiler-container {
                flex-direction: column;
            }
            
            .editor-section, .output-section {
                padding: 15px;
            }
            
            .code-editor, .output-window {
                height: 300px;
            }
        }

        /* Loading Indicator */
        .loader {
            display: none;
            border: 3px solid #f3f3f3;
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        body.dark .loader {
            border: 3px solid #444;
            border-top: 3px solid var(--secondary-color);
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Status Message */
        .status-message {
            font-size: 0.9rem;
            color: #666;
            margin-top: 5px;
        }

        body.dark .status-message {
            color: #aaa;
        }

        /* Custom Scrollbar Styling */
        .code-editor::-webkit-scrollbar {
            width: 10px;
            height: 10px;
        }

        .code-editor::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 5px;
        }

        .code-editor::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 5px;
        }

        .code-editor::-webkit-scrollbar-thumb:hover {
            background: #5a4bd1;
        }

        body.dark .code-editor::-webkit-scrollbar-track {
            background: #333;
        }

        body.dark .code-editor::-webkit-scrollbar-thumb {
            background: var(--secondary-color);
        }

        body.dark .code-editor::-webkit-scrollbar-thumb:hover {
            background: #e6b84c;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <!-- Navbar -->
    <section id="navbar">
        <div class="nav-container">
            <a href="index.html" class="logo">Code<span>Flow</span></a>
            <div class="nav-links">
                <a href="/home">Home</a>
                <a href="/languages">Languages</a>
                <a href="/sql" class="active">SQL Compiler</a>
                <label class="theme-switch">
                    <input type="checkbox" id="theme-toggle">
                    <span class="slider"></span>
                </label>
            </div>
        </div>
    </section>

    <!-- Compiler Main Content -->
    <div class="container">
        <div class="compiler-container">
            <!-- Editor Section -->
            <div class="editor-section">
                <div class="section-header">
                    <h3 class="section-title">SQL Editor</h3>
                    <div>
                        <button class="btn btn-run" id="run-btn">
                            <i class="fas fa-play"></i> Run Query
                            <span class="loader" id="run-loader"></span>
                        </button>
                    </div>
                </div>
                <textarea id="code-editor" class="code-editor">-- Welcome to CodeFlow SQL Compiler
-- Type your SQL queries here and click Run Query

-- Example: Create a table
CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    department VARCHAR(50),
    salary DECIMAL(10, 2)
);

-- Example: Insert data
INSERT INTO employees (id, name, department, salary) VALUES
(1, 'John Doe', 'Engineering', 75000),
(2, 'Jane Smith', 'Marketing', 65000),
(3, 'Bob Johnson', 'Engineering', 80000),
(4, 'Alice Williams', 'HR', 55000),
(5, 'Charlie Brown', 'Finance', 70000);

-- Example: SELECT query with WHERE clause
SELECT name, department, salary
FROM employees
WHERE salary > 60000
ORDER BY salary DESC;

-- Example: JOIN query
CREATE TABLE departments (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    location VARCHAR(100)
);

INSERT INTO departments (id, name, location) VALUES
(1, 'Engineering', 'New York'),
(2, 'Marketing', 'Los Angeles'),
(3, 'HR', 'Chicago'),
(4, 'Finance', 'Boston');

SELECT e.name, e.salary, d.name AS department_name, d.location
FROM employees e
JOIN departments d ON e.department = d.name
ORDER BY e.salary DESC;</textarea>
                
                <!-- Suggestions Panel -->
                <div class="suggestions-panel">
                    <h4 class="suggestion-title">Query Suggestions</h4>
                    <div id="suggestions-list">
                        <div class="suggestion-item" data-code="-- Your SQL query here">Comment - Single line</div>
                        <div class="suggestion-item" data-code="SELECT column1, column2 FROM table_name;">SELECT - Basic query</div>
                        <div class="suggestion-item" data-code="SELECT * FROM table_name WHERE condition;">SELECT with WHERE</div>
                        <div class="suggestion-item" data-code="SELECT column1, column2 FROM table_name ORDER BY column1 DESC;">SELECT with ORDER BY</div>
                        <div class="suggestion-item" data-code="SELECT column1, COUNT(*) FROM table_name GROUP BY column1;">SELECT with GROUP BY</div>
                        <div class="suggestion-item" data-code="SELECT a.column1, b.column2 FROM table1 a JOIN table2 b ON a.id = b.id;">JOIN query</div>
                        <div class="suggestion-item" data-code="INSERT INTO table_name (column1, column2) VALUES (value1, value2);">INSERT statement</div>
                        <div class="suggestion-item" data-code="UPDATE table_name SET column1 = value1 WHERE condition;">UPDATE statement</div>
                        <div class="suggestion-item" data-code="DELETE FROM table_name WHERE condition;">DELETE statement</div>
                        <div class="suggestion-item" data-code="CREATE TABLE table_name (column1 datatype, column2 datatype);">CREATE TABLE</div>
                    </div>
                </div>
                <div class="status-message" id="editor-status"></div>
            </div>
            
            <!-- Output Section -->
            <div class="output-section">
                <div class="section-header">
                    <h3 class="section-title">Query Results</h3>
                    <div>
                        <button class="btn btn-clear" id="clear-btn">
                            <i class="fas fa-trash"></i> Clear
                        </button>
                    </div>
                </div>
                <div id="output-window" class="output-window">SQL query results will appear here...</div>
                <div class="status-message" id="output-status"></div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer>
        <p>&copy; <span id="current-year"></span> CodeFlow. All rights reserved.</p>
    </footer>
    
    <script>
        // Simple initialization
        document.addEventListener('DOMContentLoaded', function() {
            // Get DOM elements
            const codeEditor = document.getElementById('code-editor');
            const runBtn = document.getElementById('run-btn');
            const clearBtn = document.getElementById('clear-btn');
            const outputWindow = document.getElementById('output-window');
            const runLoader = document.getElementById('run-loader');
            const editorStatus = document.getElementById('editor-status');
            const outputStatus = document.getElementById('output-status');
            const currentYear = document.getElementById('current-year');
            const suggestionItems = document.querySelectorAll('.suggestion-item');
            const toggleSwitch = document.getElementById('theme-toggle');
            
            // Set current year
            currentYear.textContent = new Date().getFullYear();
            
            // Make the textarea work directly
            codeEditor.style.width = '100%';
            codeEditor.style.height = '500px';
            codeEditor.style.fontFamily = 'Courier New, Courier, monospace';
            codeEditor.style.fontSize = '14px';
            codeEditor.style.lineHeight = '1.5';
            codeEditor.style.padding = '10px';
            codeEditor.style.border = '1px solid #ccc';
            codeEditor.style.borderRadius = '8px';
            codeEditor.style.resize = 'none';
            codeEditor.style.overflow = 'auto';
            
            // Theme toggle functionality
            toggleSwitch.addEventListener('change', function(e) {
                if (e.target.checked) {
                    document.body.classList.add('dark');
                    codeEditor.style.backgroundColor = '#252525';
                    codeEditor.style.color = 'white';
                    codeEditor.style.borderColor = '#444';
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.body.classList.remove('dark');
                    codeEditor.style.backgroundColor = 'white';
                    codeEditor.style.color = 'black';
                    codeEditor.style.borderColor = '#ccc';
                    localStorage.setItem('theme', 'light');
                }
            });
            
            // Check for saved theme preference
            const currentTheme = localStorage.getItem('theme');
            if (currentTheme === 'dark') {
                document.body.classList.add('dark');
                toggleSwitch.checked = true;
                codeEditor.style.backgroundColor = '#252525';
                codeEditor.style.color = 'white';
                codeEditor.style.borderColor = '#444';
            }
            
            // Run query function
            function runQuery() {
                const code = codeEditor.value;
                
                // Validate code
                if (!code.trim()) {
                    editorStatus.textContent = "Please enter an SQL query";
                    editorStatus.style.color = "#ff6b6b";
                    return;
                }
                
                // Show loading state
                runLoader.style.display = 'inline-block';
                runBtn.disabled = true;
                editorStatus.textContent = "Processing SQL query...";
                editorStatus.style.color = document.body.classList.contains('dark') ? "#fdcb6e" : "#6c5ce7";
                outputWindow.textContent = "Processing your SQL query...";
                
                // Simulate processing delay
                setTimeout(() => {
                    // Simple client-side simulation
                    try {
                        // Check for SELECT queries
                        if (code.toLowerCase().includes('select')) {
                            // Extract the query to determine what to display
                            const query = code.toLowerCase();
                            
                            // Sample data for demonstration
                            const employees = [
                                { id: 1, name: 'John Doe', department: 'Engineering', salary: 75000 },
                                { id: 2, name: 'Jane Smith', department: 'Marketing', salary: 65000 },
                                { id: 3, name: 'Bob Johnson', department: 'Engineering', salary: 80000 },
                                { id: 4, name: 'Alice Williams', department: 'HR', salary: 55000 },
                                { id: 5, name: 'Charlie Brown', department: 'Finance', salary: 70000 }
                            ];
                            
                            const departments = [
                                { id: 1, name: 'Engineering', location: 'New York' },
                                { id: 2, name: 'Marketing', location: 'Los Angeles' },
                                { id: 3, name: 'HR', location: 'Chicago' },
                                { id: 4, name: 'Finance', location: 'Boston' }
                            ];
                            
                            // Simple query simulation
                            let result = '';
                            
                            if (query.includes('join')) {
                                // Simulate JOIN query
                                result = '<table class="result-table"><thead><tr><th>Name</th><th>Salary</th><th>Department</th><th>Location</th></tr></thead><tbody>';
                                
                                employees.forEach(emp => {
                                    const dept = departments.find(d => d.name === emp.department);
                                    if (dept) {
                                        result += `<tr><td>${emp.name}</td><td>$${emp.salary.toLocaleString()}</td><td>${emp.department}</td><td>${dept.location}</td></tr>`;
                                    }
                                });
                                
                                result += '</tbody></table>';
                            } else if (query.includes('where') && query.includes('salary')) {
                                // Simulate WHERE query with salary
                                result = '<table class="result-table"><thead><tr><th>Name</th><th>Department</th><th>Salary</th></tr></thead><tbody>';
                                
                                employees
                                    .filter(emp => emp.salary > 60000)
                                    .sort((a, b) => b.salary - a.salary)
                                    .forEach(emp => {
                                        result += `<tr><td>${emp.name}</td><td>${emp.department}</td><td>$${emp.salary.toLocaleString()}</td></tr>`;
                                    });
                                
                                result += '</tbody></table>';
                            } else if (query.includes('select *')) {
                                // Simulate SELECT * query
                                result = '<table class="result-table"><thead><tr><th>ID</th><th>Name</th><th>Department</th><th>Salary</th></tr></thead><tbody>';
                                
                                employees.forEach(emp => {
                                    result += `<tr><td>${emp.id}</td><td>${emp.name}</td><td>${emp.department}</td><td>$${emp.salary.toLocaleString()}</td></tr>`;
                                });
                                
                                result += '</tbody></table>';
                            } else {
                                // Generic SELECT query
                                result = '<div class="console-log">Query executed successfully. Results would be displayed here.</div>';
                            }
                            
                            outputWindow.innerHTML = result;
                            outputStatus.textContent = "Query executed successfully";
                            outputStatus.style.color = "#00b894";
                        } else if (code.toLowerCase().includes('create table') || 
                                  code.toLowerCase().includes('insert into') || 
                                  code.toLowerCase().includes('update') || 
                                  code.toLowerCase().includes('delete from')) {
                            // DDL or DML statements
                            outputWindow.innerHTML = '<div class="console-log">Statement executed successfully.</div>';
                            outputStatus.textContent = "Statement executed successfully";
                            outputStatus.style.color = "#00b894";
                        } else {
                            outputWindow.innerHTML = '<div class="console-log">Query executed successfully (no results to display)</div>';
                            outputStatus.textContent = "Query executed successfully";
                            outputStatus.style.color = "#00b894";
                        }
                    } catch (error) {
                        outputWindow.innerHTML = `<div class="console-error">Error in query execution: ${error.message}</div>`;
                        outputStatus.textContent = "Query error";
                        outputStatus.style.color = "#ff6b6b";
                    }
                    
                    // Reset loading state
                    runLoader.style.display = 'none';
                    runBtn.disabled = false;
                }, 1000);
            }
            
            // Clear output
            clearBtn.addEventListener('click', () => {
                outputWindow.innerHTML = '';
                outputStatus.textContent = '';
            });
            
            // Run button
            runBtn.addEventListener('click', runQuery);
            
            // Insert suggestion
            function insertSuggestion(code) {
                const cursorPos = codeEditor.selectionStart;
                const textBefore = codeEditor.value.substring(0, cursorPos);
                const textAfter = codeEditor.value.substring(codeEditor.selectionEnd);
                
                codeEditor.value = textBefore + code + '\n' + textAfter;
                
                // Set cursor position after inserted code
                const newCursorPos = cursorPos + code.length + 1;
                codeEditor.setSelectionRange(newCursorPos, newCursorPos);
                codeEditor.focus();
                
                editorStatus.textContent = "Suggestion inserted";
                editorStatus.style.color = document.body.classList.contains('dark') ? "#fdcb6e" : "#6c5ce7";
                setTimeout(() => {
                    editorStatus.textContent = "";
                }, 2000);
            }
            
            // Add event listeners to suggestion items
            suggestionItems.forEach(item => {
                item.addEventListener('click', function() {
                    const code = this.getAttribute('data-code');
                    insertSuggestion(code);
                });
            });
        });
    </script>
</body>
</html>
