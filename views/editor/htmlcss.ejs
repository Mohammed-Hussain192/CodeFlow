<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CodeFlow - HTML/CSS/JS Compiler</title>
    <style>
        /* Reset and Base Styles */
        :root {
            --primary-color: #6c5ce7;
            --secondary-color: #fdcb6e;
            --dark-color: #2d3436;
            --light-color: #f8f9fa;
            --text-dark: #333;
            --text-light: #f0f2f5;
            --shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--light-color);
            color: var(--text-dark);
            transition: var(--transition);
            line-height: 1.6;
        }

        body.dark {
            background-color: #121212;
            color: var(--text-light);
        }

        /* Navbar */
        #navbar {
            background-color: var(--primary-color);
            color: white;
            position: sticky;
            top: 0;
            padding: 15px 0;
            z-index: 1000;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        body.dark #navbar {
            background-color: #1e1e1e;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        }

        .nav-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
        }

        .logo span {
            color: var(--secondary-color);
        }

        .nav-links {
            display: flex;
            gap: 25px;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-size: 1.1rem;
            font-weight: 500;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: var(--secondary-color);
        }

        /* Theme Toggle */
        .theme-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
            margin-left: 20px;
        }

        .theme-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary-color);
        }

        body.dark input:checked + .slider {
            background-color: var(--secondary-color);
        }

        input:checked + .slider:before {
            transform: translateX(30px);
        }

        /* Compiler Container */
        .compiler-container {
            display: flex;
            min-height: calc(100vh - 70px);
            padding: 30px 0;
        }

        .editor-section, .output-section {
            flex: 1;
            padding: 0 15px;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .section-title {
            font-size: 1.5rem;
            color: var(--primary-color);
        }

        body.dark .section-title {
            color: var(--secondary-color);
        }

        /* Editor Styling */
        .code-editor {
            width: 100%;
            height: 500px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            overflow: hidden;
            font-family: 'Courier New', Courier, monospace;
            font-size: 14px;
            line-height: 1.5;
            padding: 10px;
            border: 1px solid #ccc;
            background-color: white;
            color: black;
            resize: vertical;
        }

        body.dark .code-editor {
            background-color: #252525;
            color: white;
            border-color: #444;
        }

        /* Output Styling */
        .output-window {
            width: 100%;
            height: 500px;
            background-color: white;
            border-radius: 8px;
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        body.dark .output-window {
            background-color: #252525;
        }

        /* Preview Frame */
        #preview-frame {
            width: 100%;
            height: 100%;
            border: none;
            background-color: white;
        }

        body.dark #preview-frame {
            background-color: #252525;
        }

        /* Console Styling */
        .console-output {
            color: inherit;
        }
        .console-error {
            color: #ff6b6b;
        }
        .console-warn {
            color: #fdcb6e;
        }
        .console-log {
            color: #55efc4;
        }

        /* Controls */
        .controls {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: var(--transition);
            font-weight: 600;
        }

        .btn:hover {
            background-color: #5a4bd1;
            transform: translateY(-2px);
        }

        .btn-run {
            background-color: #00b894;
        }

        .btn-run:hover {
            background-color: #00a884;
        }

        .btn-clear {
            background-color: #d63031;
        }

        .btn-clear:hover {
            background-color: #c0392b;
        }

        /* Tab Navigation */
        .tab-navigation {
            display: flex;
            margin-bottom: 15px;
            border-bottom: 1px solid #ddd;
        }

        body.dark .tab-navigation {
            border-bottom: 1px solid #444;
        }

        .tab-btn {
            padding: 10px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            color: #666;
            transition: var(--transition);
        }

        body.dark .tab-btn {
            color: #aaa;
        }

        .tab-btn.active {
            color: var(--primary-color);
            border-bottom: 2px solid var(--primary-color);
        }

        body.dark .tab-btn.active {
            color: var(--secondary-color);
            border-bottom: 2px solid var(--secondary-color);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        /* Suggestions Panel */
        .suggestions-panel {
            margin-top: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: var(--shadow);
            padding: 15px;
            max-height: 200px;
            overflow-y: auto;
        }

        body.dark .suggestions-panel {
            background-color: #252525;
        }

        .suggestion-title {
            font-size: 1.1rem;
            margin-bottom: 10px;
            color: var(--primary-color);
        }

        body.dark .suggestion-title {
            color: var(--secondary-color);
        }

        .suggestion-item {
            padding: 8px 10px;
            margin-bottom: 5px;
            border-radius: 4px;
            cursor: pointer;
            transition: var(--transition);
        }

        .suggestion-item:hover {
            background-color: rgba(108, 92, 231, 0.1);
        }

        body.dark .suggestion-item:hover {
            background-color: rgba(253, 203, 110, 0.1);
        }

        /* Footer */
        footer {
            background-color: var(--dark-color);
            color: white;
            text-align: center;
            padding: 20px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .compiler-container {
                flex-direction: column;
            }
            
            .editor-section, .output-section {
                padding: 15px;
            }
            
            .code-editor, .output-window {
                height: 300px;
            }
        }

        /* Loading Indicator */
        .loader {
            display: none;
            border: 3px solid #f3f3f3;
            border-top: 3px solid var(--primary-color);
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            margin-left: 10px;
        }

        body.dark .loader {
            border: 3px solid #444;
            border-top: 3px solid var(--secondary-color);
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Status Message */
        .status-message {
            font-size: 0.9rem;
            color: #666;
            margin-top: 5px;
        }

        body.dark .status-message {
            color: #aaa;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <!-- Navbar -->
    <section id="navbar">
        <div class="nav-container">
            <a href="index.html" class="logo">Code<span>Flow</span></a>
            <div class="nav-links">
                <a href="/home">Home</a>
                <a href="/languages">Languages</a>
                <a href="/htmlcss" class="active">HTML/CSS/JS Compiler</a>
                <label class="theme-switch">
                    <input type="checkbox" id="theme-toggle">
                    <span class="slider"></span>
                </label>
            </div>
        </div>
    </section>

    <!-- Compiler Main Content -->
    <div class="container">
        <div class="compiler-container">
            <!-- Editor Section -->
            <div class="editor-section">
                <div class="section-header">
                    <h3 class="section-title">Web Editor</h3>
                    <div>
                        <button class="btn btn-run" id="run-btn">
                            <i class="fas fa-play"></i> Run Code
                            <span class="loader" id="run-loader"></span>
                        </button>
                    </div>
                </div>
                
                <!-- Tab Navigation -->
                <div class="tab-navigation">
                    <button class="tab-btn active" data-tab="html">HTML</button>
                    <button class="tab-btn" data-tab="css">CSS</button>
                    <button class="tab-btn" data-tab="js">JavaScript</button>
                </div>
                
                <!-- HTML Editor -->
                <div class="tab-content active" id="html-tab">
                    <textarea id="html-editor" class="code-editor"><!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Web Page</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Welcome to My Web Page</h1>
        <p>This is a sample HTML page. Edit this code to create your own web page!</p>
        <button id="greet-btn">Click Me</button>
        <div id="greeting"></div>
    </div>
    
    <script src="script.js"></script>
</body>
</html></textarea>
                </div>
                
                <!-- CSS Editor -->
                <div class="tab-content" id="css-tab">
                    <textarea id="css-editor" class="code-editor">/* Add your CSS styles here */
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
    background-color: #f5f5f5;
}

.container {
    max-width: 800px;
    margin: 0 auto;
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #6c5ce7;
    margin-bottom: 20px;
}

p {
    line-height: 1.6;
    color: #333;
}

button {
    background-color: #6c5ce7;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 20px;
    transition: background-color 0.3s;
}

button:hover {
    background-color: #5a4bd1;
}

#greeting {
    margin-top: 20px;
    font-weight: bold;
    color: #00b894;
}</textarea>
                </div>
                
                <!-- JavaScript Editor -->
                <div class="tab-content" id="js-tab">
                    <textarea id="js-editor" class="code-editor">// Add your JavaScript code here
document.addEventListener('DOMContentLoaded', function() {
    const greetBtn = document.getElementById('greet-btn');
    const greetingDiv = document.getElementById('greeting');
    
    greetBtn.addEventListener('click', function() {
        greetingDiv.textContent = 'Hello! Welcome to CodeFlow!';
        greetingDiv.style.color = '#6c5ce7';
    });
});</textarea>
                </div>
                
                <!-- Suggestions Panel -->
                <div class="suggestions-panel">
                    <h4 class="suggestion-title">Code Suggestions</h4>
                    <div id="suggestions-list">
                        <div class="suggestion-item" data-code="&lt;div class=&quot;container&quot;&gt;&#10;  &lt;!-- Your content here --&gt;&#10;&lt;/div&gt;">Container div</div>
                        <div class="suggestion-item" data-code="&lt;h1&gt;Your Heading&lt;/h1&gt;">Heading</div>
                        <div class="suggestion-item" data-code="&lt;p&gt;Your paragraph text&lt;/p&gt;">Paragraph</div>
                        <div class="suggestion-item" data-code="&lt;button id=&quot;my-btn&quot;&gt;Click Me&lt;/button&gt;">Button</div>
                        <div class="suggestion-item" data-code="&lt;img src=&quot;image.jpg&quot; alt=&quot;Description&quot;&gt;">Image</div>
                        <div class="suggestion-item" data-code="&lt;a href=&quot;#&quot;&gt;Link Text&lt;/a&gt;">Link</div>
                        <div class="suggestion-item" data-code=".my-class {&#10;  color: blue;&#10;  font-size: 16px;&#10;}">CSS Class</div>
                        <div class="suggestion-item" data-code="#my-id {&#10;  background-color: #f1f1f1;&#10;  padding: 10px;&#10;}">CSS ID</div>
                        <div class="suggestion-item" data-code="document.getElementById('element-id')">Get Element</div>
                        <div class="suggestion-item" data-code="element.addEventListener('click', function() {&#10;  // Your code here&#10;});">Event Listener</div>
                    </div>
                </div>
                <div class="status-message" id="editor-status"></div>
            </div>
            
            <!-- Output Section -->
            <div class="output-section">
                <div class="section-header">
                    <h3 class="section-title">Preview</h3>
                    <div>
                        <button class="btn btn-clear" id="clear-btn">
                            <i class="fas fa-trash"></i> Clear
                        </button>
                    </div>
                </div>
                <div class="output-window">
                    <iframe id="preview-frame" sandbox="allow-scripts"></iframe>
                </div>
                <div class="status-message" id="output-status"></div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer>
        <p>&copy; <span id="current-year"></span> CodeFlow. All rights reserved.</p>
    </footer>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get DOM elements
            const htmlEditor = document.getElementById('html-editor');
            const cssEditor = document.getElementById('css-editor');
            const jsEditor = document.getElementById('js-editor');
            const runBtn = document.getElementById('run-btn');
            const clearBtn = document.getElementById('clear-btn');
            const previewFrame = document.getElementById('preview-frame');
            const runLoader = document.getElementById('run-loader');
            const editorStatus = document.getElementById('editor-status');
            const outputStatus = document.getElementById('output-status');
            const currentYear = document.getElementById('current-year');
            const suggestionItems = document.querySelectorAll('.suggestion-item');
            const toggleSwitch = document.getElementById('theme-toggle');
            const tabBtns = document.querySelectorAll('.tab-btn');
            const tabContents = document.querySelectorAll('.tab-content');
            
            // Set current year
            currentYear.textContent = new Date().getFullYear();
            
            // Tab switching functionality
            tabBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    // Remove active class from all buttons and contents
                    tabBtns.forEach(b => b.classList.remove('active'));
                    tabContents.forEach(c => c.classList.remove('active'));
                    
                    // Add active class to clicked button
                    this.classList.add('active');
                    
                    // Show corresponding content
                    const tabId = this.getAttribute('data-tab');
                    document.getElementById(`${tabId}-tab`).classList.add('active');
                });
            });
            
            // Theme toggle functionality
            function toggleTheme(isDark) {
                if (isDark) {
                    document.body.classList.add('dark');
                    [htmlEditor, cssEditor, jsEditor].forEach(editor => {
                        editor.style.backgroundColor = '#252525';
                        editor.style.color = 'white';
                        editor.style.borderColor = '#444';
                    });
                } else {
                    document.body.classList.remove('dark');
                    [htmlEditor, cssEditor, jsEditor].forEach(editor => {
                        editor.style.backgroundColor = 'white';
                        editor.style.color = 'black';
                        editor.style.borderColor = '#ccc';
                    });
                }
            }
            
            toggleSwitch.addEventListener('change', function(e) {
                const isDark = e.target.checked;
                toggleTheme(isDark);
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
            });
            
            // Check for saved theme preference
            const currentTheme = localStorage.getItem('theme');
            if (currentTheme === 'dark') {
                toggleSwitch.checked = true;
                toggleTheme(true);
            }
            
            // Run code function
            function runCode() {
                const html = htmlEditor.value;
                const css = cssEditor.value;
                const js = jsEditor.value;
                
                // Show loading state
                runLoader.style.display = 'inline-block';
                runBtn.disabled = true;
                editorStatus.textContent = "Processing web code...";
                editorStatus.style.color = document.body.classList.contains('dark') ? "#fdcb6e" : "#6c5ce7";
                
                try {
                    // Create a complete HTML document with embedded CSS and JS
                    let completeHtml = html;
                    
                    // Only add style tag if CSS is not empty
                    if (css.trim()) {
                        completeHtml = completeHtml.replace('</head>', `<style>${css}</style></head>`);
                    }
                    
                    // Only add script tag if JS is not empty
                    if (js.trim()) {
                        completeHtml = completeHtml.replace('</body>', `<script>${js}</script></body>`);
                    }
                    
                    // Set the iframe content directly
                    const frameDoc = previewFrame.contentDocument || previewFrame.contentWindow.document;
                    frameDoc.open();
                    frameDoc.write(completeHtml);
                    frameDoc.close();
                    
                    // Reset loading state
                    runLoader.style.display = 'none';
                    runBtn.disabled = false;
                    editorStatus.textContent = "Code executed successfully";
                    editorStatus.style.color = "#00b894";
                    outputStatus.textContent = "Preview updated";
                    outputStatus.style.color = "#00b894";
                } catch (error) {
                    // Handle errors
                    runLoader.style.display = 'none';
                    runBtn.disabled = false;
                    editorStatus.textContent = "Error: " + error.message;
                    editorStatus.style.color = "#ff6b6b";
                    outputStatus.textContent = "Failed to run code";
                    outputStatus.style.color = "#ff6b6b";
                }
            }
            
            // Clear output
            clearBtn.addEventListener('click', () => {
                const frameDoc = previewFrame.contentDocument || previewFrame.contentWindow.document;
                frameDoc.open();
                frameDoc.write('');
                frameDoc.close();
                outputStatus.textContent = "Preview cleared";
                outputStatus.style.color = "#00b894";
            });
            
            // Run button
            runBtn.addEventListener('click', runCode);
            
            // Insert suggestion
            function insertSuggestion(code) {
                // Determine which editor is active
                let activeEditor;
                if (document.getElementById('html-tab').classList.contains('active')) {
                    activeEditor = htmlEditor;
                } else if (document.getElementById('css-tab').classList.contains('active')) {
                    activeEditor = cssEditor;
                } else {
                    activeEditor = jsEditor;
                }
                
                const cursorPos = activeEditor.selectionStart;
                const textBefore = activeEditor.value.substring(0, cursorPos);
                const textAfter = activeEditor.value.substring(activeEditor.selectionEnd);
                
                activeEditor.value = textBefore + code + '\n' + textAfter;
                
                // Set cursor position after inserted code
                const newCursorPos = cursorPos + code.length + 1;
                activeEditor.setSelectionRange(newCursorPos, newCursorPos);
                activeEditor.focus();
                
                editorStatus.textContent = "Suggestion inserted";
                editorStatus.style.color = document.body.classList.contains('dark') ? "#fdcb6e" : "#6c5ce7";
                setTimeout(() => {
                    editorStatus.textContent = "";
                }, 2000);
            }
            
            // Add event listeners to suggestion items
            suggestionItems.forEach(item => {
                item.addEventListener('click', function() {
                    const code = this.getAttribute('data-code');
                    insertSuggestion(code);
                });
            });
            
            // Run code initially
            runCode();
        });
    </script>
</body>
</html>